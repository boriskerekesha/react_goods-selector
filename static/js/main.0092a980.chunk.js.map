{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","isSelectedGood","button","good","classList","contains","setState","clearList","this","className","type","onClick","map","classNames","event","currentTarget","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAMWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,eAAiB,SAACC,EAA2BC,GACvCD,EAAOE,UAAUC,SAAS,WAC5B,EAAKC,SAAS,CAAEN,aAAc,KAKhC,EAAKM,SAAS,CAAEN,aAAcG,KAZlC,EAeEI,UAAY,WACV,EAAKD,SAAS,CAAEN,aAAc,MAhBlC,4CAmBE,WAAU,IAAD,OACCA,EAAiBQ,KAAKT,MAAtBC,aAER,OACE,uBAAMS,UAAU,oBAAhB,WACKT,GAAgB,oBAAIS,UAAU,QAAd,+BAElBT,GAEG,qBAAIS,UAAU,sCAAd,UACGT,EACA,IAFH,cAKE,wBACE,UAAQ,cACRU,KAAK,SACLD,UAAU,cACVE,QAAS,kBAAM,EAAKJ,kBAK5B,uBAAOE,UAAU,QAAjB,SACE,gCACGZ,EAAMe,KAAI,SAACT,GAAD,OACT,qBAEE,UAAQ,OACRM,UAAWI,IAAW,CACpB,+BAAgCb,IAAiBG,IAJrD,UAOE,6BACE,wBACEO,KAAK,SACLC,QAAS,SAACG,GACR,EAAKb,eAAea,EAAMC,cAAeZ,IAE3CM,UAAWI,IACT,SACA,CAAE,UAAWb,IAAiBG,IAEhC,UAASH,IAAiBG,EACtB,eACA,YAXN,SAaGH,IAAiBG,EAAO,IAAM,QAGnC,oBAAI,UAAQ,YAAYM,UAAU,eAAlC,SACGN,MAxBEA,iBA9CrB,GAAyBa,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.0092a980.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  isSelectedGood = (button: HTMLButtonElement, good: string): void => {\n    if (button.classList.contains('is-info')) {\n      this.setState({ selectedGood: '' });\n\n      return;\n    }\n\n    this.setState({ selectedGood: good });\n  };\n\n  clearList = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        { !selectedGood && <h1 className=\"title\">No goods selected</h1>}\n\n        {selectedGood\n          && (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {selectedGood}\n              {' '}\n              is selected\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={() => this.clearList()}\n              />\n            </h1>\n          )}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light': selectedGood === good,\n                })}\n              >\n                <td>\n                  <button\n                    type=\"button\"\n                    onClick={(event) => {\n                      this.isSelectedGood(event.currentTarget, good);\n                    }}\n                    className={classNames(\n                      'button',\n                      { 'is-info': selectedGood === good },\n                    )}\n                    data-cy={selectedGood === good\n                      ? 'RemoveButton'\n                      : 'AddButton'}\n                  >\n                    {selectedGood === good ? '-' : '+'}\n                  </button>\n                </td>\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}