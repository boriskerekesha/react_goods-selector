{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","isSelectedGood","good","setState","clearList","this","className","length","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAKaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAMWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEH,aAAcE,KANlC,EASEE,UAAY,WACV,EAAKD,SAAS,CAAEH,aAAc,MAVlC,4CAaE,WAAU,IAAD,OACCA,EAAiBK,KAAKN,MAAtBC,aAER,OACE,uBAAMM,UAAU,oBAAhB,UACKN,EAAaO,OAEZ,GADC,oBAAID,UAAU,QAAd,+BAGJN,EAAaO,OAEV,qBAAID,UAAU,sCAAd,UACGN,EACA,IAFH,cAKE,wBACE,UAAQ,cACRQ,KAAK,SACLF,UAAU,cACVG,QAAS,kBAAM,EAAKL,kBAIxB,GAEJ,uBAAOE,UAAU,QAAjB,SACE,gCACGT,EAAMa,KAAI,SAACR,GAAD,OACT,qBAEE,UAAQ,OACRI,UAAWK,IAAW,CACpB,+BAAgCX,IAAiBE,IAJrD,UAOE,6BACE,wBACE,UAAQ,YACRM,KAAK,SACLC,QAAS,WACP,EAAKR,eAAeC,IAEtBI,UAAWK,IACT,SACA,CAAE,UAAWX,IAAiBE,IARlC,SAWGF,IAAiBE,EAAO,IAAM,QAGnC,oBAAI,UAAQ,YAAYI,UAAU,eAAlC,SACGJ,MAtBEA,iBA3CrB,GAAyBU,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a553acb7.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  isSelectedGood = (good: string) => {\n    this.setState({ selectedGood: good });\n  };\n\n  clearList = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        { !selectedGood.length\n          ? (<h1 className=\"title\">No goods selected</h1>)\n          : ''}\n\n        {selectedGood.length\n          ? (\n            <h1 className=\"title is-flex is-align-items-center\">\n              {selectedGood}\n              {' '}\n              is selected\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={() => this.clearList()}\n              />\n            </h1>\n          )\n          : ''}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good) => (\n              <tr\n                key={good}\n                data-cy=\"Good\"\n                className={classNames({\n                  'has-background-success-light': selectedGood === good,\n                })}\n              >\n                <td>\n                  <button\n                    data-cy=\"AddButton\"\n                    type=\"button\"\n                    onClick={() => {\n                      this.isSelectedGood(good);\n                    }}\n                    className={classNames(\n                      'button',\n                      { 'is-info': selectedGood === good },\n                    )}\n                  >\n                    {selectedGood === good ? '-' : '+'}\n                  </button>\n                </td>\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}